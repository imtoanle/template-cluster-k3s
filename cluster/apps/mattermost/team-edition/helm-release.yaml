---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: mattermost-team-edition
  namespace: mattermost
spec:
  interval: 15m
  chart:
    spec:
      chart: mattermost-team-edition
      version: 6.6.18
      sourceRef:
        kind: HelmRepository
        name: mattermost
        namespace: flux-system
      interval: 15m
  install:
    createNamespace: true
    remediation:
      retries: 6
  upgrade:
    remediation:
      retries: 6
  values:
    persistence:
      ## This volume persists generated data from users, like images, attachments...
      ##
      data:
        enabled: true
        size: 10Gi
        ## If defined, volume.beta.kubernetes.io/storage-class: <storageClass>
        ## Default: volume.alpha.kubernetes.io/storage-class: default
        ##
        storageClass: longhorn
        accessMode: ReadWriteOnce
      # existingClaim: ""
      plugins:
        enabled: true
        size: 1Gi
        ## If defined, volume.beta.kubernetes.io/storage-class: <storageClass>
        ## Default: volume.alpha.kubernetes.io/storage-class: default
        ##
        storageClass: longhorn
        accessMode: ReadWriteOnce
      # existingClaim: ""
    ingress:
      enabled: true
      path: /
      annotations:
        cert-manager.io/cluster-issuer: "letsencrypt-production"
        external-dns.alpha.kubernetes.io/target: "ipv4.${SECRET_DOMAIN}"
        external-dns/is-public: "true"
        kubernetes.io/ingress.class: nginx
        # certmanager.k8s.io/issuer:  your-issuer
        # nginx.ingress.kubernetes.io/proxy-body-size: 50m
        # nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
        # nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
        # nginx.ingress.kubernetes.io/proxy-buffering: "on"
        # nginx.ingress.kubernetes.io/configuration-snippet: |
        #   proxy_cache mattermost_cache;
        #   proxy_cache_revalidate on;
        #   proxy_cache_min_uses 2;
        #   proxy_cache_use_stale timeout;
        #   proxy_cache_lock on;
        #### To use the nginx cache you will need to set an http-snippet in the ingress-nginx configmap
        #### http-snippet: |
        ####     proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=mattermost_cache:10m max_size=3g inactive=120m use_temp_path=off;
      hosts:
        - &host "chat.${SECRET_DOMAIN}"
      tls:
        - secretName: mattermost-tls
          hosts:
            - *host
    configJSON:
      ServiceSettings:
        SiteURL: "https://chat.${SECRET_DOMAIN}"
      TeamSettings:
        SiteName: "Mattermost on ${SECRET_DOMAIN}"
    mysql:
      enabled: true
      mysqlRootPassword: "123123"
      mysqlUser: "mattermost"
      mysqlPassword: "123123"
      mysqlDatabase: mattermost

      repository: mysql
      imageTag: '8.0.18'
      testFramework:
        enabled: false

      persistence:
        enabled: true
        ## If defined, storageClassName: <storageClass>
        ## If set to "-", storageClassName: "", which disables dynamic provisioning
        ## If undefined (the default) or set to null, no storageClassName spec is
        ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
        ##   GKE, AWS & OpenStack)
        ##
        storageClass: longhorn
        accessMode: ReadWriteOnce
        size: 10Gi
      # existingClaim: ""
    securityContext:
      fsGroup: 2000
      runAsGroup: 2000
      runAsUser: 2000
