---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: netmaker
  namespace: netmaker
spec:
  interval: 15m
  chart:
    spec:
      chart: netmaker
      version: 0.3.4
      sourceRef:
        kind: HelmRepository
        name: netmaker
        namespace: flux-system
      interval: 15m
  install:
    createNamespace: true
    remediation:
      retries: 6
  upgrade:
    remediation:
      retries: 6
  values:
    wireguard:
      # -- whether or not to use WireGuard on server
      enabled: true
      service:
        annotations: {}
        serviceType: LoadBalancer
      # -- whether or not to use Kernel WG (should be false unless WireGuard is installed on hosts).
      kernel: false
      # -- max number of networks that Netmaker will support if running with WireGuard enabled
      networkLimit: 10
    baseDomain: "${SECRET_DOMAIN}"
    dns:
      enabled: true
      clusterIP: '10.43.69.69'
      RWX:
        storageClassName: 'longhorn'
    RWXStorageClassName: 'longhorn'
    ingress:
      # -- attempts to configure ingress if true
      enabled: true
      className: 'nginx'
      tls:
        enabled: true
        issuerName: "letsencrypt-production"
      annotations:
        ui: {}
        rest: {}
        mq: {}
        base:
          # -- annotation to generate ACME certs if available
          external-dns.alpha.kubernetes.io/target: "ipv4.${SECRET_DOMAIN}"
          external-dns/is-public: "true"
        tls:
          # -- use acme cert if available
          kubernetes.io/tls-acme: "true"
        nginx:
          # -- Redirect http to https
          nginx.ingress.kubernetes.io/ssl-redirect: 'true'
          # -- destination addr for route
          nginx.ingress.kubernetes.io/rewrite-target: /
      hostPrefix:
        # -- ui route subdomain
        ui: 'dashboard.'
        # -- api (REST) route subdomain
        rest: 'api.'
        # -- mqtt route subdomain
        broker: 'broker.'
    postgresql-ha:
      enabled: true
      postgresql:
        # -- postgres user to generate
        username: netmaker
        # -- postgres pass to generate
        password: netmaker
        # -- postgress db to generate
        database: netmaker
        repmgrPassword: ObwZW22CUg
        # -- postgress number of replicas to deploy
        replicaCount: 2
        enabled: true
      pgpool:
        adminPassword: WtGFYeDEz8
      persistence:
        # -- size of postgres DB
        size: 1Gi
        storageClass: longhorn
